<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.CourseMapper">

    <resultMap type="Course" id="CourseResult">
        <result property="courseId" column="course_id"/>
        <result property="courseName" column="course_name"/>
        <result property="courseCode" column="course_code"/>
        <result property="courseType" column="course_type"/>
        <result property="college" column="college"/>
        <result property="credit" column="credit"/>
        <result property="introduction" column="introduction"/>
        <result property="status" column="status"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="remark" column="remark"/>
    </resultMap>

    <select id="selectCourseList" parameterType="Course" resultMap="CourseResult">
        select * from class_course
        <where>
            <if test="courseName != null and courseName != ''"> and course_name like concat('%', #{courseName}, '%')</if>
            <if test="courseCode != null and courseCode != ''"> and course_code like concat('%', #{courseCode}, '%')</if>
            <if test="courseType != null and courseType != ''"> and course_type = #{courseType}</if>
            <if test="college != null and college != ''"> and college like concat('%', #{college}, '%')</if>
            <if test="status != null and status != ''"> and status = #{status}</if>
        </where>
    </select>

    <select id="selectCourseById" parameterType="Long" resultMap="CourseResult">
        select * from class_course where course_id = #{courseId}
    </select>

    <insert id="insertCourse" parameterType="Course">
        insert into class_course (
            course_name, course_code, course_type, college, credit, introduction, status, create_by, create_time, remark
        ) values (
                     #{courseName}, #{courseCode}, #{courseType}, #{college}, #{credit}, #{introduction}, #{status}, #{createBy}, sysdate(), #{remark}
                 )
    </insert>

    <update id="updateCourse" parameterType="Course">
        update class_course
        set course_name = #{courseName},
            course_code = #{courseCode},
            course_type = #{courseType},
            college = #{college},
            credit = #{credit},
            introduction = #{introduction},
            status = #{status},
            update_by = #{updateBy},
            update_time = sysdate(),
            remark = #{remark}
        where course_id = #{courseId}
    </update>

    <delete id="deleteCourseById" parameterType="Long">
        delete from class_course where course_id = #{courseId}
    </delete>

    <delete id="deleteCourseByIds" parameterType="Long">
        delete from class_course where course_id in
        <foreach item="courseId" collection="array" open="(" separator="," close=")">
            #{courseId}
        </foreach>
    </delete>

    <select id="checkCourseCodeUnique" parameterType="String" resultMap="CourseResult">
        select * from class_course where course_code = #{courseCode} limit 1
    </select>

</mapper>